import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;
import java.util.stream.Collectors;
class Hotel {
	private String brandName;
	private double distance;
	private double charges;
	private double cust_review;
	//getter and setter , constructo and toString()
	public String getBrandName() {
		return brandName;
	}
	public void setBrandName(String brandName) {
		this.brandName = brandName;
	}
	public double getDistance() {
		return distance;
	}
	public void setDistance(double distance) {
		this.distance = distance;
	}
	public double getCharges() {
		return charges;
	}
	public void setCharges(double charges) {
		this.charges = charges;
	}
	public double getCust_review() {
		return cust_review;
	}
	public void setCust_review(double cust_review) {
		this.cust_review = cust_review;
	}
	public Hotel(String brandName, double distance, double charges, double cust_review) {
		super();
		this.brandName = brandName;
		this.distance = distance;
		this.charges = charges;
		this.cust_review = cust_review;
	}
	public Hotel() {
		super();
	}
	@Override
	public String toString() {
		return "Hotel [brandName=" + brandName + ", distance=" + distance + ", charges=" + charges + ", cust_review="
				+ cust_review + "]";
	}
	
	
}

class PicnicSpot {
    private String name;
    double distance;
    private List<Hotel> hotelList;
    double reviews;
//getter and setter , constructor , toString()
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public double getDistance() {
		return distance;
	}
	public void setDistance(double distance) {
		this.distance = distance;
	}
	public List<Hotel> getHotelList() {
		return hotelList;
	}
	public void setHotelList(List<Hotel> hotelList) {
		this.hotelList = hotelList;
	}
	public double getReviews() {
		return reviews;
	}
	public void setReviews(double reviews) {
		this.reviews = reviews;
	}
	public PicnicSpot(String name, double distance, List<Hotel> hotelList, double reviews) {
		super();
		this.name = name;
		this.distance = distance;
		this.hotelList = hotelList;
		this.reviews = reviews;
	}
	public PicnicSpot() {
		super();
	}
	@Override
	public String toString() {
		return "PicnicSpot [name=" + name + ", distance=" + distance + ", hotelList=" + hotelList + ", reviews="
				+ reviews + "]";
	}
    
    
}

public class PicnicSpotsAnalyzer {
    public static void main(String[] args) {
        // Creating a List of PicnicSpot objects
        List<PicnicSpot> picnicSpots = new ArrayList<>();
        List<Hotel> hotels = new ArrayList<Hotel>();
        
        
        
        picnicSpots.add(new PicnicSpot("Beach", 10.5, true, 4.2));
        picnicSpots.add(new PicnicSpot("Mountain", 25.0, false, 4.5));
        picnicSpots.add(new PicnicSpot("Park", 5.2, true, 4.0));
        picnicSpots.add(new PicnicSpot("Lake", 15.8, false, 4.8));
        picnicSpots.add(new PicnicSpot("Forest", 30.3, false, 4.1));

        // Find the best spot as per distance
        PicnicSpot bestSpotByDistance = picnicSpots.stream()
                .min((x,y)->Double.compare(x.getDistance(),y.getDistance())).get();
        System.out.println("Best spot as per distance: " + bestSpotByDistance);

        // Find the best spot as per reviews
        PicnicSpot bestSpotByReviews = picnicSpots.stream()
                .max((x,y)->Double.compare(x.getReviews(),y.getReviews())).get();
                
        System.out.println("Best spot as per reviews: " + bestSpotByReviews);

        // Find the best spot as per hotel availability
        PicnicSpot bestSpotByHotelAvailability = picnicSpots.stream()
                .filter(x->x.isHotelAndRestaurantAvailability())
                .findFirst()
                .orElse(null);
        System.out.println("Best spot as per hotel availability: " + bestSpotByHotelAvailability);
    }
}